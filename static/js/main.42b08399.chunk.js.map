{"version":3,"sources":["components/ContactForm.js","components/ContactElement.js","components/ContactList.js","components/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onFormSubmit","reset","this","onSubmit","htmlFor","type","required","onChange","mask","placeholder","Component","ContactElement","contact","onDeleteContact","onClick","id","ContactList","contacts","map","key","Filter","onChangeFilter","App","filter","changeFilter","formData","contactToAdd","uuidv4","find","alert","fromLS","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","filteredContacts","toLowerCase","includes","filterContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42b08399.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport MaskedInput from 'react-text-mask';\nimport PropTypes from 'prop-types';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    onFormSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (!this.state.name || !this.state.number) {\n      return;\n    }\n\n    this.props.onFormSubmit({ ...this.state });\n    this.reset();\n  };\n\n  reset() {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor=\"name\">\n          Name\n          <input\n            type=\"text\"\n            value={this.state.name}\n            name=\"name\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <label htmlFor=\"number\">\n          Number\n          <MaskedInput\n            mask={[\n              '(',\n              /\\d/,\n              /\\d/,\n              /\\d/,\n              ')',\n              ' ',\n              /\\d/,\n              /\\d/,\n              /\\d/,\n              '-',\n              /\\d/,\n              /\\d/,\n              /\\d/,\n              /\\d/,\n            ]}\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            placeholder=\"(___) ___-____\"\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactElement = ({ contact, onDeleteContact }) => (\n  <>\n    <span>\n      {contact.name}: {contact.number}\n    </span>\n    <button onClick={() => onDeleteContact(contact.id)}>Delete</button>\n  </>\n);\n\nContactElement.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactElement;\n","import React from 'react';\nimport ContactElement from './ContactElement';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          <ContactElement contact={contact} onDeleteContact={onDeleteContact} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChangeFilter }) => (\n  <>\n    <p>Find contacts by name:</p>\n    <input name=\"filter\" value={value} onChange={onChangeFilter} />\n  </>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst filterContacts = (contacts, filter) =>\n  contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const fromLS = JSON.parse(localStorage.getItem('contacts'));\n    if (fromLS) {\n      this.setState({ contacts: fromLS });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeFilter = e => {\n    const { value } = e.target;\n    this.setState({ filter: value });\n  };\n\n  onDeleteContact = id => {\n    this.setState({\n      contacts: this.state.contacts.filter(contact => contact.id !== id),\n    });\n  };\n\n  onFormSubmit = formData => {\n    const { contacts } = this.state;\n\n    const contactToAdd = {\n      id: uuidv4(),\n      name: formData.name,\n      number: formData.number,\n    };\n\n    if (contacts.find(contact => contact.name === contactToAdd.name)) {\n      alert(contactToAdd.name + 'is already in contacts');\n      return;\n    }\n    this.setState({\n      contacts: [...contacts, contactToAdd],\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const filteredContacts = filterContacts(contacts, filter);\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n\n        <ContactForm onFormSubmit={this.onFormSubmit} />\n        {contacts.length !== 0 && (\n          <>\n            <h2>Contacts</h2>\n            {contacts.length > 1 && (\n              <Filter value={filter} onChangeFilter={this.changeFilter} />\n            )}\n            <ContactList\n              contacts={filteredContacts}\n              onDeleteContact={this.onDeleteContact}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}